RDS架构
整体架构  console proxy ha db
proxy
proxy的作用 读写分离 分库分表 连接复用
proxy异步化 
解决线程阻塞问题 实现方式 NIO+前后端异步处理 引入新的问题：前后端处理速度不对称的内存问题；如何解决：预留buffer，高水位限流，低水位开闸
熔断机制 目的 保护db
配置动态升级
程序热升级 tcp端口复用
SQL审计

console
DDL管理
DML功能
Proxy管理

HA

DDL系统
DDL变更的痛点
多环境表结构不统一，上线未必验证；修改、审批麻烦；规范难以落实
解决之道 系统即文档
多环境统一 版本控制 一次变更（只能在开发环境变更） 多次同步

MYSQL索引设计
mysql索引结构 B+Tree

主键设计
1.尽可能小，一个字段 2.显示声明主键bigint,避免MySQL自动生成字符型主键 3.主键自增，和B+Tree分裂方向一致 4.不要更新主键，主键不要有业务上的含义

索引设计
1.选择性 
尽量将选择性高的列放在索引的最前面，但是也存在例外情况（比如说C1 C2，C1选择性大于C2，查询场景是WHERE C1=? AND C2=? 和 WHERE C2 = ?，这种场景下可以建立一个 C2 C1的联合索引，而不是建立C1 C2和C2的索引）
2.避免NULL
3.隔离列
就是索引的列不要进行任何计算
4.覆盖索引
就是索引存储的字段就是查询需要返回的字段
5.联合索引
将多个字段建立一个组合索引 减少索引维护和磁盘空间开销；覆盖索引降低IO操作；过滤性更好
6.前缀索引

索引Key_len
explan执行计划中可以查看

对于范围查询，如何利用索引的问题？

like如何利用索引

联合索引值的组合方式
从左向右逐步有序，先保证左边有序

分页查询 需要避免表回溯

隐式转化 需要避免查询时的隐式转换

order by






















